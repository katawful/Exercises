Indicate which, if any, of the following expressions are legal. Explain the behavior of legal expressions and why those that aren't are in error

a) *iter++;
This is legal. This will increment the reference to iter and return the dereference value that is unchanged

b) (*iter)++;
This is legal. This will derefernce iter then increment that value, returning the unchanged value.

c) *iter.empty();
This is not legal. The member operator . has higher precedence than the dereference operator.
This will try to see if the pointer iter itself is empty which doesn't work.

d) iter->empty();
This is legal. This gets the member of the dereferenced iter.

e) ++*iter;
This is legal. This will prefix increment the deferenced iter.

f) iter++->empty();
This is legal. The arrow operator will deference iter and since its in parentheses it'll also get postfix incremented.
Then it will check if its empty or not.
