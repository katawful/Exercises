Question: Which of the following initializations are legal? Explain why.

(a) int i = -1, &r = 0;
This is legal. We are initializing an int var to -1 and a initializing a null reference r.
(b) int *const p2 = &i2;
This is legal. We are creating a constant pointer of type int that points to object i2.
(c) const int i = -1, &r = 0;
This is legal. We are defining a const int i and a const int null reference.
(d) const int *const p3 = &i2;
This is legal. p3 is a pointer that points to a constant int i2.
(e) const int *p1 = &i2;
This is legal. p1 is a pointer that points to a constant double i2.
(f) const int &const r2;
This is illegal. While most of it is legal, we must intialize the reference r2.
(g) const int i2 = i, &r = i;
This is legal. We are defining a constant int of value i and a constant reference to object i. We don't need to be concerned about what the value of i is. 
